apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: microservices-ingress
  namespace: microservices
  labels:
    app.kubernetes.io/name: microservices-ingress
    app.kubernetes.io/part-of: microservices-hub
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
    traefik.ingress.kubernetes.io/router.middlewares: microservices-stripprefix@kubernetescrd
spec:
  ingressClassName: traefik
  rules:
  - host: chris.sandbox.com
    http:
      paths:
      # Frontend - root path
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80
      # API routes
      - path: /api/broker
        pathType: Prefix
        backend:
          service:
            name: broker-service
            port:
              number: 80
      - path: /api/auth
        pathType: Prefix
        backend:
          service:
            name: auth-service
            port:
              number: 80
      - path: /api/oauth
        pathType: Prefix
        backend:
          service:
            name: oauth-service
            port:
              number: 80
      - path: /api/canary
        pathType: Prefix
        backend:
          service:
            name: canary-service-stable
            port:
              number: 8080
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: stripprefix
  namespace: microservices
spec:
  stripPrefix:
    prefixes:
      - /api/broker
      - /api/auth
      - /api/oauth
      - /api/canary
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: cors
  namespace: microservices
spec:
  headers:
    accessControlAllowMethods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
    accessControlAllowOriginList:
      - "*"
    accessControlAllowHeaders:
      - "*"
    accessControlMaxAge: 3600
---
# Canary-specific stripprefix middleware
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: canary-stripprefix
  namespace: microservices
spec:
  stripPrefix:
    prefixes:
      - /canary
---
# Direct canary access with canary-specific prefix stripping
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: canary-direct-ingress
  namespace: microservices
  labels:
    app.kubernetes.io/name: canary-direct-ingress
    app.kubernetes.io/part-of: microservices-hub
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
    traefik.ingress.kubernetes.io/router.middlewares: microservices-canary-stripprefix@kubernetescrd
    traefik.ingress.kubernetes.io/service.name: canary-service-trafficsplit
    traefik.ingress.kubernetes.io/service.port: "8080"
spec:
  ingressClassName: traefik
  rules:
  - host: chris.sandbox.com
    http:
      paths:
      # Direct canary service UI access with /canary prefix stripped
      - path: /canary
        pathType: Prefix
        backend:
          service:
            name: canary-service-stable
            port:
              number: 8080
---
# Separate ingress for canary testing with weighted routing
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: canary-weighted-ingress
  namespace: microservices
  labels:
    app.kubernetes.io/name: canary-weighted-ingress
    app.kubernetes.io/part-of: microservices-hub
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
    traefik.ingress.kubernetes.io/service.name: canary-service-trafficsplit
    traefik.ingress.kubernetes.io/service.port: "8080"
spec:
  ingressClassName: traefik
  rules:
  - host: canary.microservices.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: canary-service-trafficsplit
            port:
              number: 8080
