---
- name: Kubernetes Master Node Setup
  hosts: master
  become: yes
  tasks:
    - name: Pull required Kubernetes images
      command: kubeadm config images pull

    - name: Initialize Kubernetes Cluster
      command: >
        kubeadm init --apiserver-advertise-address=192.168.10.100
        --service-cidr=172.16.20.0/16 --skip-phases=addon/kube-proxy  --apiserver-cert-extra-sans=192.168.10.100,192.168.10.101,192.168.10.102,192.168.10.103,192.168.10.104,192.168.10.105
      register: kubeadm_output
      changed_when: "'initialized successfully' in kubeadm_output.stdout"

    - name: Get existing valid kubeadm token
      shell: kubeadm token list | awk 'NR>1 {print $1; exit}'
      register: kubeadm_token
      changed_when: false
      failed_when: false
      run_once: true

    - name: Create new kubeadm token if none exists
      shell: kubeadm token create --ttl 2h
      register: kubeadm_new_token
      when: kubeadm_token.stdout == ""
      run_once: true

    - name: Get discovery-token-ca-cert-hash
      shell: |
        openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt \
        | openssl rsa -pubin -outform DER 2>/dev/null \
        | sha256sum | awk '{print $1}'
      register: discovery_hash
      run_once: true

    - name: Save cluster join command
      copy:
        dest: /tmp/joincluster.sh
        mode: 0755
        content: |
          kubeadm join {{ ansible_host }}:6443 \
          --token {{ kubeadm_new_token.stdout | default(kubeadm_token.stdout) }} \
          --discovery-token-ca-cert-hash sha256:{{ discovery_hash.stdout }}
      run_once: true

    - name: Setup kubeconfig
      file:
        path: ~/.kube
        state: directory

    - name: Copy Kubernetes admin config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: ~/.kube/config
        remote_src: yes

    - name: Download Helm installation script
      get_url:
        url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        dest: /tmp/get_helm.sh
        mode: '0700'
    - command: /tmp/get_helm.sh

    - name: Download Cilium CLI
      get_url:
        url: "https://github.com/cilium/cilium-cli/releases/latest/download/cilium-linux-arm64.tar.gz"
        dest: "/tmp/cilium-linux-arm64.tar.gz"

    - name: Install Cilium CLI
      block:
        - get_url:
            url: "https://github.com/cilium/cilium-cli/releases/latest/download/cilium-linux-arm64.tar.gz"
            dest: "/tmp/cilium-linux-arm64.tar.gz"
        - get_url:
            url: "https://github.com/cilium/cilium-cli/releases/latest/download/cilium-linux-arm64.tar.gz.sha256sum"
            dest: "/tmp/cilium-linux-arm64.tar.gz.sha256sum"
        - command: sha256sum --check cilium-linux-arm64.tar.gz.sha256sum
          args:
            chdir: /tmp
        - unarchive:
            src: /tmp/cilium-linux-arm64.tar.gz
            dest: /usr/local/bin
            remote_src: yes

    - name: Add Cilium Helm repository
      command: helm repo add cilium https://helm.cilium.io/

    - name: Install Cilium using Helm
      command: >
        helm install cilium cilium/cilium
        --namespace kube-system
        --set kubeProxyReplacement=true
        --set k8sServiceHost=192.168.10.100
        --set k8sServicePort=6443
        --set ipam.operator.clusterPoolIPv4PodCIDRList="10.18.0.0/16"
    
    - name: Ensure .kube directory exists on local machine
      delegate_to: localhost
      become: false
      file:
        path: ~/.kube
        state: directory
        mode: '0755'
      tags:
        - kubeconfig

    - name: Copy kubeconfig from master node to local machine
      fetch:
        src: /etc/kubernetes/admin.conf
        dest: ~/.kube/config
        flat: yes
      delegate_to: kmaster
      tags:
        - kubeconfig